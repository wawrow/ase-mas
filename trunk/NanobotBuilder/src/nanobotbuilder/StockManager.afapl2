IMPORT com.agentfactory.afapl2.core.agent.FIPACore;
LOAD_MODULE blueprint module.Inventory;

ONTOLOGY stockManager {
    PREDICATE state(?state);
    PREDICATE supervisor(?name, ?addr);
    PREDICATE nanobotAllocated(?state);
    PREDICATE nanobotUnavailable(?state);
}

ACTION allocate(?agentType) {
    PRECONDITION BELIEF(true);
    POSTCONDITION BELIEF(true);
    CLASS actuator.AllocateNanobot;
}

ACTION allocateFailed(?agentType) {
    PRECONDITION BELIEF(true);
    POSTCONDITION BELIEF(true);
    CLASS actuator.AllocateNanobotFailed;
}

ACTION deploy(?agentType, ?taskId, ?name, ?address) {
    PRECONDITION BELIEF(true);
    POSTCONDITION BELIEF(true);
    CLASS actuator.DeployNanobot;
}

// The supervisor has asked for us to deploy a nanobot
BELIEF(fipaMessage(request, sender(?name, ?addr), deploy(?agentType, ?taskId))) &
BELIEF(supervisor(?supervisorName, ?supervisorAddr)) =>
COMMIT(?self, ?now, BELIEF(true),
    PAR(allocate(?agentType),
        DO_WHEN(BELIEF(nanobotAllocated(?state)), deploy(?agentType, ?taskId, ?supervisorName, ?supervisorAddr)),
        DO_WHEN(BELIEF(nanobotUnavailable(?state)), allocateFailed(?agentType))
    )
);

