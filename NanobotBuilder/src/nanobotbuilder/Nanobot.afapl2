IMPORT nanobotbuilder.Common;

ACTION gotNanobotTask(?name, ?x, ?y) {
    PRECONDITION BELIEF(true);
    POSTCONDITION BELIEF(true);
    CLASS actuator.GotNanobotTask;
}

// If we are given a task we persist it (with an actuator)
BELIEF(fipaMessage(request, sender(?name, ?addr), nanobotTask(?x, ?y))) =>
COMMIT(?self, ?now, BELIEF(true), gotNanobotTask(?name, ?x, ?y));

// If we have an allocated task and we are at our target then we are finished
BELIEF(state(target(?targetX, ?targetY))) &
BELIEF(supervisor(?name, ?addr)) &
!BELIEF(state(finishedAcknowledged)) &
BELIEF(agentType(?type)) &
BELIEF(position(?targetX, ?targetY)) =>
COMMIT(?self, ?now, BELIEF(true),
    SEQ(finishedTask,
        request(agentID(?name, ?addr), finishedTask(?type, ?targetX, ?targetY))
    )
);

// If we get the finished acknowledged message from supervisor then we can stop
BELIEF(fipaMessage(request, sender(?name, ?addr), finishedAcknowledged)) =>
COMMIT(?self, ?now, BELIEF(true), finishedAcknowledged(?name));

// If we have an allocated task then get our preferences for the next move
BELIEF(state(target(?targetX, ?targetY))) &
BELIEF(position(?x, ?y)) &
!BELIEF(state(finished)) &
!BELIEF(movePreferences(?first, ?second, ?third, ?fourth)) =>
COMMIT(?self, ?now, BELIEF(true), getMovePreferences(?x, ?y, ?targetX, ?targetY));

